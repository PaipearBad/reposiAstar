const cluster = require('cluster');
const numCPUs = require('os').cpus().length;
function aStarAlgorithm(start, goal) {
}
if (cluster.isMaster) {
  const states = ['state1', 'state2', 'state3', 'state4', 'state5', 'state6'];
  const chunkSize = Math.ceil(states.length / numCPUs);
  const chunks = [];
  for (let i = 0; i < states.length; i += chunkSize) {
    chunks.push(states.slice(i, i + chunkSize));
  }
  for (let i = 0; i < numCPUs; i++) {
    const worker = cluster.fork(); 
    worker.send(chunks[i]);
  }
  const results = [];
  for (const id in cluster.workers) {
    cluster.workers[id].on('message', (message) => {
      results.push(message);
      if (results.length === numCPUs) {
        console.log(results);
        cluster.disconnect(); 
      }
    });
  }
} else {
  process.on('message', (chunk) => {
    const result = aStarAlgorithm(chunk, 'goalState');
    process.send(result);
  });
}
